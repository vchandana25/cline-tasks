{"ast":null,"code":"// Initial default habits data for first-time users\nexport const getInitialHabitsData = () => [{\n  id: \"habit-1\",\n  name: \"Read\",\n  color: \"bg-orange-500\",\n  createdAt: \"2024-02-01\",\n  records: {\n    \"2024-02-05\": true,\n    \"2024-02-07\": true,\n    \"2024-02-08\": true,\n    \"2024-02-09\": true,\n    \"2024-02-10\": true,\n    \"2024-02-11\": true,\n    \"2024-02-18\": true // Monday (today)\n  }\n}, {\n  id: \"habit-2\",\n  name: \"Workout\",\n  color: \"bg-purple-600\",\n  createdAt: \"2024-02-01\",\n  records: {\n    \"2024-02-05\": true,\n    \"2024-02-06\": true,\n    \"2024-02-09\": true,\n    \"2024-02-10\": true,\n    \"2024-02-18\": true // Monday (today)\n  }\n}, {\n  id: \"habit-3\",\n  name: \"Meditate\",\n  color: \"bg-cyan-400\",\n  createdAt: \"2024-02-01\",\n  records: {\n    \"2024-02-05\": true,\n    \"2024-02-06\": true,\n    \"2024-02-07\": true,\n    \"2024-02-08\": true,\n    \"2024-02-09\": true,\n    \"2024-02-10\": true,\n    \"2024-02-11\": true\n  }\n}, {\n  id: \"habit-4\",\n  name: \"Journal\",\n  color: \"bg-orange-600\",\n  createdAt: \"2024-02-01\",\n  records: {\n    \"2024-02-05\": true,\n    \"2024-02-06\": true,\n    \"2024-02-07\": true,\n    \"2024-02-09\": true,\n    \"2024-02-10\": true\n  }\n}, {\n  id: \"habit-5\",\n  name: \"Alcohol\",\n  color: \"bg-blue-600\",\n  createdAt: \"2024-02-01\",\n  records: {\n    \"2024-02-05\": true,\n    \"2024-02-06\": true,\n    \"2024-02-07\": true,\n    \"2024-02-10\": true,\n    \"2024-02-11\": true\n  }\n}, {\n  id: \"habit-6\",\n  name: \"Weed\",\n  color: \"bg-green-500\",\n  createdAt: \"2024-02-01\",\n  records: {\n    \"2024-02-09\": true,\n    \"2024-02-10\": true\n  }\n}];\nexport const staticOverallData = {\n  greetingName: \"Hailey\",\n  timeTillBedtime: \"5 hrs 42 mins\"\n};\nexport const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\nexport const dayNamesShort = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\nexport const tabOptions = [\"Week\", \"Month\", \"Year\", \"All Time\"];\nexport const availableColors = [\"bg-red-500\", \"bg-orange-500\", \"bg-amber-500\", \"bg-yellow-500\", \"bg-lime-500\", \"bg-green-500\", \"bg-emerald-500\", \"bg-teal-500\", \"bg-cyan-500\", \"bg-sky-500\", \"bg-blue-500\", \"bg-indigo-500\", \"bg-violet-500\", \"bg-purple-500\", \"bg-fuchsia-500\", \"bg-pink-500\"];\n\n// Utility functions for date handling\nexport const formatDate = date => {\n  return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD format\n};\nexport const getCurrentWeekDates = (baseDate = new Date()) => {\n  const currentDate = new Date(baseDate);\n  const day = currentDate.getDay();\n  const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is Sunday\n  const monday = new Date(currentDate.setDate(diff));\n  const weekDates = [];\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(monday);\n    date.setDate(monday.getDate() + i);\n    weekDates.push(formatDate(date));\n  }\n  return weekDates;\n};\nexport const getWeekRange = (baseDate = new Date()) => {\n  const dates = getCurrentWeekDates(baseDate);\n  const startDate = new Date(dates[0]);\n  const endDate = new Date(dates[6]);\n  const formatDisplayDate = date => {\n    const options = {\n      weekday: \"short\",\n      month: \"numeric\",\n      day: \"numeric\"\n    };\n    return date.toLocaleDateString(\"en-US\", options);\n  };\n  return `${formatDisplayDate(startDate)} - ${formatDisplayDate(endDate)}`;\n};\nexport const getCurrentDateFormatted = (date = new Date()) => {\n  const options = {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"numeric\"\n  };\n  return date.toLocaleDateString(\"en-US\", options);\n};\n\n// localStorage utility functions\nexport const saveHabitsToStorage = habits => {\n  localStorage.setItem(\"habitTracker_habits\", JSON.stringify(habits));\n};\nexport const loadHabitsFromStorage = () => {\n  try {\n    const stored = localStorage.getItem(\"habitTracker_habits\");\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error(\"Error loading habits from localStorage:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["getInitialHabitsData","id","name","color","createdAt","records","staticOverallData","greetingName","timeTillBedtime","dayNames","dayNamesShort","tabOptions","availableColors","formatDate","date","toISOString","split","getCurrentWeekDates","baseDate","Date","currentDate","day","getDay","diff","getDate","monday","setDate","weekDates","i","push","getWeekRange","dates","startDate","endDate","formatDisplayDate","options","weekday","month","toLocaleDateString","getCurrentDateFormatted","saveHabitsToStorage","habits","localStorage","setItem","JSON","stringify","loadHabitsFromStorage","stored","getItem","parse","error","console"],"sources":["/Users/vchandana/Documents/cline/cline-tasks/src/data.js"],"sourcesContent":["// Initial default habits data for first-time users\nexport const getInitialHabitsData = () => [\n  {\n    id: \"habit-1\",\n    name: \"Read\",\n    color: \"bg-orange-500\",\n    createdAt: \"2024-02-01\",\n    records: {\n      \"2024-02-05\": true,\n      \"2024-02-07\": true,\n      \"2024-02-08\": true,\n      \"2024-02-09\": true,\n      \"2024-02-10\": true,\n      \"2024-02-11\": true,\n      \"2024-02-18\": true, // Monday (today)\n    },\n  },\n  {\n    id: \"habit-2\",\n    name: \"Workout\",\n    color: \"bg-purple-600\",\n    createdAt: \"2024-02-01\",\n    records: {\n      \"2024-02-05\": true,\n      \"2024-02-06\": true,\n      \"2024-02-09\": true,\n      \"2024-02-10\": true,\n      \"2024-02-18\": true, // Monday (today)\n    },\n  },\n  {\n    id: \"habit-3\",\n    name: \"Meditate\",\n    color: \"bg-cyan-400\",\n    createdAt: \"2024-02-01\",\n    records: {\n      \"2024-02-05\": true,\n      \"2024-02-06\": true,\n      \"2024-02-07\": true,\n      \"2024-02-08\": true,\n      \"2024-02-09\": true,\n      \"2024-02-10\": true,\n      \"2024-02-11\": true,\n    },\n  },\n  {\n    id: \"habit-4\",\n    name: \"Journal\",\n    color: \"bg-orange-600\",\n    createdAt: \"2024-02-01\",\n    records: {\n      \"2024-02-05\": true,\n      \"2024-02-06\": true,\n      \"2024-02-07\": true,\n      \"2024-02-09\": true,\n      \"2024-02-10\": true,\n    },\n  },\n  {\n    id: \"habit-5\",\n    name: \"Alcohol\",\n    color: \"bg-blue-600\",\n    createdAt: \"2024-02-01\",\n    records: {\n      \"2024-02-05\": true,\n      \"2024-02-06\": true,\n      \"2024-02-07\": true,\n      \"2024-02-10\": true,\n      \"2024-02-11\": true,\n    },\n  },\n  {\n    id: \"habit-6\",\n    name: \"Weed\",\n    color: \"bg-green-500\",\n    createdAt: \"2024-02-01\",\n    records: {\n      \"2024-02-09\": true,\n      \"2024-02-10\": true,\n    },\n  },\n];\n\nexport const staticOverallData = {\n  greetingName: \"Hailey\",\n  timeTillBedtime: \"5 hrs 42 mins\",\n};\n\nexport const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\nexport const dayNamesShort = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport const tabOptions = [\"Week\", \"Month\", \"Year\", \"All Time\"];\n\nexport const availableColors = [\n  \"bg-red-500\",\n  \"bg-orange-500\",\n  \"bg-amber-500\",\n  \"bg-yellow-500\",\n  \"bg-lime-500\",\n  \"bg-green-500\",\n  \"bg-emerald-500\",\n  \"bg-teal-500\",\n  \"bg-cyan-500\",\n  \"bg-sky-500\",\n  \"bg-blue-500\",\n  \"bg-indigo-500\",\n  \"bg-violet-500\",\n  \"bg-purple-500\",\n  \"bg-fuchsia-500\",\n  \"bg-pink-500\",\n];\n\n// Utility functions for date handling\nexport const formatDate = (date) => {\n  return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD format\n};\n\nexport const getCurrentWeekDates = (baseDate = new Date()) => {\n  const currentDate = new Date(baseDate);\n  const day = currentDate.getDay();\n  const diff = currentDate.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is Sunday\n  const monday = new Date(currentDate.setDate(diff));\n\n  const weekDates = [];\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(monday);\n    date.setDate(monday.getDate() + i);\n    weekDates.push(formatDate(date));\n  }\n\n  return weekDates;\n};\n\nexport const getWeekRange = (baseDate = new Date()) => {\n  const dates = getCurrentWeekDates(baseDate);\n  const startDate = new Date(dates[0]);\n  const endDate = new Date(dates[6]);\n\n  const formatDisplayDate = (date) => {\n    const options = { weekday: \"short\", month: \"numeric\", day: \"numeric\" };\n    return date.toLocaleDateString(\"en-US\", options);\n  };\n\n  return `${formatDisplayDate(startDate)} - ${formatDisplayDate(endDate)}`;\n};\n\nexport const getCurrentDateFormatted = (date = new Date()) => {\n  const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\n  return date.toLocaleDateString(\"en-US\", options);\n};\n\n// localStorage utility functions\nexport const saveHabitsToStorage = (habits) => {\n  localStorage.setItem(\"habitTracker_habits\", JSON.stringify(habits));\n};\n\nexport const loadHabitsFromStorage = () => {\n  try {\n    const stored = localStorage.getItem(\"habitTracker_habits\");\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error(\"Error loading habits from localStorage:\", error);\n    return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}